// Machine generated IDispatch wrapper class(es) created by Microsoft Visual C++

// NOTE: Do not modify the contents of this file.  If this class is regenerated by
//  Microsoft Visual C++, your modifications will be overwritten.


#include "stdafx.h"
#include "moimagelayer.h"

// Dispatch interfaces referenced by this interface
#include "MoRectangle.h"


/////////////////////////////////////////////////////////////////////////////
// CMoImageLayer properties

BOOL CMoImageLayer::GetVisible()
{
	BOOL result;
	GetProperty(0x1, VT_BOOL, (void*)&result);
	return result;
}

void CMoImageLayer::SetVisible(BOOL propVal)
{
	SetProperty(0x1, VT_BOOL, propVal);
}

CString CMoImageLayer::GetName()
{
	CString result;
	GetProperty(0x2, VT_BSTR, (void*)&result);
	return result;
}

void CMoImageLayer::SetName(LPCTSTR propVal)
{
	SetProperty(0x2, VT_BSTR, propVal);
}

CMoRectangle CMoImageLayer::GetExtent()
{
	LPDISPATCH pDispatch;
	GetProperty(0x5, VT_DISPATCH, (void*)&pDispatch);
	return CMoRectangle(pDispatch);
}

void CMoImageLayer::SetExtent(LPDISPATCH propVal)
{
	SetProperty(0x5, VT_DISPATCH, propVal);
}

CString CMoImageLayer::GetFile()
{
	CString result;
	GetProperty(0x6, VT_BSTR, (void*)&result);
	return result;
}

void CMoImageLayer::SetFile(LPCTSTR propVal)
{
	SetProperty(0x6, VT_BSTR, propVal);
}

long CMoImageLayer::GetLayerType()
{
	long result;
	GetProperty(0x7, VT_I4, (void*)&result);
	return result;
}

void CMoImageLayer::SetLayerType(long propVal)
{
	SetProperty(0x7, VT_I4, propVal);
}

CString CMoImageLayer::GetTag()
{
	CString result;
	GetProperty(0x3, VT_BSTR, (void*)&result);
	return result;
}

void CMoImageLayer::SetTag(LPCTSTR propVal)
{
	SetProperty(0x3, VT_BSTR, propVal);
}

BOOL CMoImageLayer::GetValid()
{
	BOOL result;
	GetProperty(0x8, VT_BOOL, (void*)&result);
	return result;
}

void CMoImageLayer::SetValid(BOOL propVal)
{
	SetProperty(0x8, VT_BOOL, propVal);
}

BOOL CMoImageLayer::GetUpdateWhileDrawing()
{
	BOOL result;
	GetProperty(0x4, VT_BOOL, (void*)&result);
	return result;
}

void CMoImageLayer::SetUpdateWhileDrawing(BOOL propVal)
{
	SetProperty(0x4, VT_BOOL, propVal);
}

BOOL CMoImageLayer::GetTransparent()
{
	BOOL result;
	GetProperty(0x9, VT_BOOL, (void*)&result);
	return result;
}

void CMoImageLayer::SetTransparent(BOOL propVal)
{
	SetProperty(0x9, VT_BOOL, propVal);
}

unsigned long CMoImageLayer::GetTransparentColor()
{
	unsigned long result;
	GetProperty(0xa, VT_I4, (void*)&result);
	return result;
}

void CMoImageLayer::SetTransparentColor(unsigned long propVal)
{
	SetProperty(0xa, VT_I4, propVal);
}

/////////////////////////////////////////////////////////////////////////////
// CMoImageLayer operations

void CMoImageLayer::OpenCatalog(LPDISPATCH pTable, LPCTSTR ImageDirPath, long OpenOptions)
{
	static BYTE parms[] =
		VTS_DISPATCH VTS_BSTR VTS_I4;
	InvokeHelper(0xb, DISPATCH_METHOD, VT_EMPTY, NULL, parms,
		 pTable, ImageDirPath, OpenOptions);
}

long CMoImageLayer::GetColumns()
{
	long result;
	InvokeHelper(0xc, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

long CMoImageLayer::GetRows()
{
	long result;
	InvokeHelper(0xd, DISPATCH_PROPERTYGET, VT_I4, (void*)&result, NULL);
	return result;
}

CMoRectangle CMoImageLayer::GetClipExtent()
{
	LPDISPATCH pDispatch;
	InvokeHelper(0xe, DISPATCH_PROPERTYGET, VT_DISPATCH, (void*)&pDispatch, NULL);
	return CMoRectangle(pDispatch);
}

void CMoImageLayer::SetClipExtent(LPDISPATCH newValue)
{
	static BYTE parms[] =
		VTS_DISPATCH;
	InvokeHelper(0xe, DISPATCH_PROPERTYPUT, VT_EMPTY, NULL, parms,
		 newValue);
}
